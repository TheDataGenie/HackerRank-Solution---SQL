# Julia conducted a 15 days of learning SQL contest. The start date of the contest was March 01, 2016 and the end date was March 15, 2016.

# Write a query to print total number of unique hackers who made at least 1 submission each day (starting on the first day of the contest), 
# and find the hacker_id and name of the hacker who made maximum number of submissions each day. 
# If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. 
# The query should print this information for each day of the contest, sorted by the date.


SELECT      SUBMISSION_DATE,
           (SELECT      COUNT(DISTINCT HACKER_ID)  
            FROM        SUBMISSIONS S2  
            WHERE       S2.SUBMISSION_DATE = S1.SUBMISSION_DATE
            AND        (SELECT       COUNT(DISTINCT S3.SUBMISSION_DATE) 
                        FROM         SUBMISSIONS S3
                        WHERE        S3.HACKER_ID = S2.HACKER_ID 
                        AND          S3.SUBMISSION_DATE < S1.SUBMISSION_DATE) = DATEDIFF(S1.SUBMISSION_DATE , '2016-03-01')),
           (SELECT      HACKER_ID 
            FROM        SUBMISSIONS S2 
            WHERE       S2.SUBMISSION_DATE = S1.SUBMISSION_DATE 
            GROUP BY    HACKER_ID 
            ORDER BY    COUNT(SUBMISSION_ID) desc, HACKER_ID LIMIT 1) as TMP,
           (SELECT      NAME 
            FROM        HACKERS 
            WHERE       HACKER_ID = TMP)

FROM       (SELECT      DISTINCT SUBMISSION_DATE FROM SUBMISSIONS) S1

GROUP BY    SUBMISSION_DATE
;



# MS SQL Server


WITH cte1 AS (
            SELECT      submission_date
                    ,   hacker_id
                    ,   COUNT(*) AS no_of_submission
                    ,   DAY(submission_date) AS day_num

            FROM        submissions

            GROUP BY    submission_date
                    ,   hacker_id
            )
, cte2 AS (
        SELECT      *
                ,   COUNT(*) OVER (PARTITION BY hacker_id ORDER BY submission_date) AS till_date_submission
                ,   CASE WHEN day_num = COUNT(*) OVER (PARTITION BY hacker_id ORDER BY submission_date) THEN 1 ELSE 0 END AS flag

        FROM        cte1
        )
, cte3 AS (
        SELECT      *
                ,   SUM(flag) OVER (PARTITION BY submission_date) AS cnt
                ,   ROW_NUMBER() OVER (PARTITION BY submission_date ORDER BY no_of_submission DESC, hacker_id) AS rn

        FROM        cte2
        )
SELECT      c.submission_date
        ,   c.cnt
        ,   c.hacker_id
        ,   h.name

FROM        cte3 c

JOIN        hackers h
ON          c.hacker_id = h.hacker_id

WHERE       c.rn = 1

ORDER BY    c.submission_date
;
